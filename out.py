#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation

engine = create_engine('mysql://bioversity:bioversity2015aws@localhost/climmobv3')
DeclarativeBase = declarative_base()
metadata = DeclarativeBase.metadata
metadata.bind = engine

class Activitylog(DeclarativeBase):
    __tablename__ = 'activitylog'

    __table_args__ = {}

    #column definitions
    log_datetime = Column('log_datetime', DATETIME())
    log_id = Column('log_id', INTEGER(display_width=9), primary_key=True, nullable=False)
    log_message = Column('log_message', TEXT())
    log_type = Column('log_type', VARCHAR(length=3))
    log_user = Column('log_user', VARCHAR(length=80), nullable=False)

    #relation definitions


class Apilog(DeclarativeBase):
    __tablename__ = 'apilog'

    __table_args__ = {}

    #column definitions
    log_datetime = Column('log_datetime', DATETIME())
    log_id = Column('log_id', INTEGER(display_width=9), primary_key=True, nullable=False)
    log_ip = Column('log_ip', VARCHAR(length=45))
    log_user = Column('log_user', VARCHAR(length=80), nullable=False)
    log_uuid = Column('log_uuid', VARCHAR(length=80))

    #relation definitions


class Country(DeclarativeBase):
    __tablename__ = 'country'

    __table_args__ = {}

    #column definitions
    cnty_cod = Column('cnty_cod', VARCHAR(length=3), primary_key=True, nullable=False)
    cnty_name = Column('cnty_name', VARCHAR(length=120))

    #relation definitions


class Crop(DeclarativeBase):
    __tablename__ = 'crop'

    __table_args__ = {}

    #column definitions
    crop_id = Column('crop_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    crop_name = Column('crop_name', VARCHAR(length=45))
    user_name = Column('user_name', VARCHAR(length=80))

    #relation definitions


class Enumerator(DeclarativeBase):
    __tablename__ = 'enumerator'

    __table_args__ = {}

    #column definitions
    enum_active = Column('enum_active', TINYINT(display_width=4))
    enum_id = Column('enum_id', VARCHAR(length=80), primary_key=True, nullable=False)
    enum_name = Column('enum_name', VARCHAR(length=120))
    enum_password = Column('enum_password', VARCHAR(length=80))
    project_cod = Column('project_cod', VARCHAR(length=80), primary_key=True, nullable=False)
    user_name = Column('user_name', VARCHAR(length=80), primary_key=True, nullable=False)

    #relation definitions


class I18n(DeclarativeBase):
    __tablename__ = 'i18n'

    __table_args__ = {}

    #column definitions
    lang_code = Column('lang_code', VARCHAR(length=5), primary_key=True, nullable=False)
    lang_name = Column('lang_name', VARCHAR(length=120))

    #relation definitions


class Package(DeclarativeBase):
    __tablename__ = 'package'

    __table_args__ = {}

    #column definitions
    package_id = Column('package_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    project_cod = Column('project_cod', VARCHAR(length=80), primary_key=True, nullable=False)
    user_name = Column('user_name', VARCHAR(length=80), primary_key=True, nullable=False)
    varietya_project = Column('varietya_project', VARCHAR(length=80), nullable=False)
    varietya_user = Column('varietya_user', VARCHAR(length=80), nullable=False)
    varietya_variety = Column('varietya_variety', INTEGER(display_width=11), nullable=False)
    varietyb_project = Column('varietyb_project', VARCHAR(length=80), nullable=False)
    varietyb_user = Column('varietyb_user', VARCHAR(length=80), nullable=False)
    varietyb_variety = Column('varietyb_variety', INTEGER(display_width=11), nullable=False)
    varietyc_project = Column('varietyc_project', VARCHAR(length=80), nullable=False)
    varietyc_user = Column('varietyc_user', VARCHAR(length=80), nullable=False)
    varietyc_variety = Column('varietyc_variety', INTEGER(display_width=11), nullable=False)

    #relation definitions


class Prjquestion(DeclarativeBase):
    __tablename__ = 'prjquestion'

    __table_args__ = {}

    #column definitions
    added_date = Column('added_date', DATETIME())
    project_cod = Column('project_cod', VARCHAR(length=80), primary_key=True, nullable=False)
    question_id = Column('question_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    user_name = Column('user_name', VARCHAR(length=80), primary_key=True, nullable=False)

    #relation definitions


class Prjvariety(DeclarativeBase):
    __tablename__ = 'prjvariety'

    __table_args__ = {}

    #column definitions
    project_cod = Column('project_cod', VARCHAR(length=80), primary_key=True, nullable=False)
    source_crop = Column('source_crop', INTEGER(display_width=11))
    source_variety = Column('source_variety', INTEGER(display_width=11))
    user_name = Column('user_name', VARCHAR(length=80), primary_key=True, nullable=False)
    variety_id = Column('variety_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    variety_name = Column('variety_name', VARCHAR(length=120))

    #relation definitions


class Project(DeclarativeBase):
    __tablename__ = 'project'

    __table_args__ = {}

    #column definitions
    project_abstract = Column('project_abstract', TEXT())
    project_cnty = Column('project_cnty', VARCHAR(length=3), nullable=False)
    project_cod = Column('project_cod', VARCHAR(length=80), primary_key=True, nullable=False)
    project_crop = Column('project_crop', INTEGER(display_width=11), nullable=False)
    project_lang = Column('project_lang', VARCHAR(length=5), nullable=False)
    project_name = Column('project_name', VARCHAR(length=120))
    project_pi = Column('project_pi', VARCHAR(length=120))
    project_piemail = Column('project_piemail', VARCHAR(length=120))
    project_tags = Column('project_tags', TEXT())
    user_name = Column('user_name', VARCHAR(length=80), primary_key=True, nullable=False)

    #relation definitions


class Qstoption(DeclarativeBase):
    __tablename__ = 'qstoption'

    __table_args__ = {}

    #column definitions
    question_id = Column('question_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    value_code = Column('value_code', INTEGER(display_width=11), primary_key=True, nullable=False)
    value_desc = Column('value_desc', VARCHAR(length=120))

    #relation definitions


class Question(DeclarativeBase):
    __tablename__ = 'question'

    __table_args__ = {}

    #column definitions
    question_desc = Column('question_desc', VARCHAR(length=120))
    question_dtype = Column('question_dtype', INTEGER(display_width=11))
    question_id = Column('question_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    question_notes = Column('question_notes', TEXT())
    question_type = Column('question_type', INTEGER(display_width=11))
    question_unit = Column('question_unit', VARCHAR(length=120))
    user_name = Column('user_name', VARCHAR(length=80))

    #relation definitions


class Response(DeclarativeBase):
    __tablename__ = 'response'

    __table_args__ = {}

    #column definitions
    prjproject_cod = Column('prjproject_cod', VARCHAR(length=80), nullable=False)
    prjuser_name = Column('prjuser_name', VARCHAR(length=80), nullable=False)
    question_id = Column('question_id', INTEGER(display_width=11), nullable=False)
    resp_datevalue = Column('resp_datevalue', DATETIME())
    resp_decvalue = Column('resp_decvalue', DECIMAL(precision=11, scale=3))
    resp_intvalue = Column('resp_intvalue', INTEGER(display_width=11))
    resp_question = Column('resp_question', INTEGER(display_width=11))
    resp_txtvalue = Column('resp_txtvalue', TEXT())
    resp_uuid = Column('resp_uuid', VARCHAR(length=80), primary_key=True, nullable=False)
    resp_value = Column('resp_value', INTEGER(display_width=11))
    resp_variety_id = Column('resp_variety_id', INTEGER(display_width=11))
    resp_variety_project = Column('resp_variety_project', VARCHAR(length=80))
    resp_variety_user = Column('resp_variety_user', VARCHAR(length=80))
    submission_uuid = Column('submission_uuid', VARCHAR(length=80), primary_key=True, nullable=False)

    #relation definitions


class Sector(DeclarativeBase):
    __tablename__ = 'sector'

    __table_args__ = {}

    #column definitions
    sector_cod = Column('sector_cod', INTEGER(display_width=11), primary_key=True, nullable=False)
    sector_name = Column('sector_name', VARCHAR(length=120))

    #relation definitions


class Submission(DeclarativeBase):
    __tablename__ = 'submission'

    __table_args__ = {}

    #column definitions
    enum_id = Column('enum_id', VARCHAR(length=80), nullable=False)
    enum_project = Column('enum_project', VARCHAR(length=80), nullable=False)
    enum_user = Column('enum_user', VARCHAR(length=80), nullable=False)
    package_id = Column('package_id', INTEGER(display_width=11), nullable=False)
    package_project = Column('package_project', VARCHAR(length=80), nullable=False)
    package_user = Column('package_user', VARCHAR(length=80), nullable=False)
    submission_date = Column('submission_date', DATETIME())
    submission_source = Column('submission_source', VARCHAR(length=45))
    submission_sourceuuid = Column('submission_sourceuuid', VARCHAR(length=80))
    submission_uuid = Column('submission_uuid', VARCHAR(length=80), primary_key=True, nullable=False)

    #relation definitions


class User(DeclarativeBase):
    __tablename__ = 'user'

    __table_args__ = {}

    #column definitions
    user_about = Column('user_about', TEXT())
    user_active = Column('user_active', TINYINT(display_width=4))
    user_apikey = Column('user_apikey', VARCHAR(length=45))
    user_cnty = Column('user_cnty', VARCHAR(length=3), nullable=False)
    user_email = Column('user_email', VARCHAR(length=120))
    user_fullname = Column('user_fullname', VARCHAR(length=120))
    user_name = Column('user_name', VARCHAR(length=80), primary_key=True, nullable=False)
    user_organization = Column('user_organization', VARCHAR(length=120))
    user_password = Column('user_password', VARCHAR(length=80))
    user_sector = Column('user_sector', INTEGER(display_width=11), nullable=False)

    #relation definitions


class Variety(DeclarativeBase):
    __tablename__ = 'variety'

    __table_args__ = {}

    #column definitions
    crop_id = Column('crop_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    variety_id = Column('variety_id', INTEGER(display_width=11), primary_key=True, nullable=False)
    variety_name = Column('variety_name', VARCHAR(length=120))

    #relation definitions


